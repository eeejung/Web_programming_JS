javascript 이벤트 관련 특성 :
element에서 발생하는 이벤트는 ' on이벤트 = 이벤트핸들러함수(event객체) ' 로 처리 방법
w3 표준에서는 element에서 발생하는 이벤트에 여러 이벤트 핸들러를 등록해서 처리 할 수 있음
element.addEventListener ("이벤트", 이벤트핸들러함수, false);
element.removeEventListener("이벤트", 이벤트핸들러함수);

Browser가 이벤트 전파 기본 방식 : child element-> parent element 전파 , event bubbling
event bubbling을 중단시키려면 event.stopPropagation(); 사용

element에서 발생하는 이벤트에 대해 1번만 동작하는 이벤트 핸들러 등록 :
element.addEventListener ("이벤트", function(){
    //이벤트 처리 코드
    element.on이벤트 = null;    
  }, false);

브라우저에 처리는 기본 이벤트 : 예] form태그의 submit이벤트, <a>태그의 click이벤트 등
브라우저에 처리는 기본 이벤트 취소 방법 :
1. event객체의 preventDefault();
2. 이벤트 핸들러 함수에서 return false;

------------------------------------------------------------------
BOM (Brower Object Model)
window(Window) : 브라우저의 전역 객체
alert(), prompt(), confirm(), setInterval(), clearInterval(), open(), close(), onXXXXX, document, navigator, location, screen,...
screen : 브라우저별로 화면 속성이 서로 다르기 때문에 운영체제와 관련 screen 속성 제공
location : html페이지 이동, 새로고침등의 기능 제공 , href속성, assign(), reload(), replace(), location=location, url관련 정보를 추출


origin = 프로토콜 + 도메인 + 포트
cors (cross origin resource sharing) : 웹의 기본 보안 정책 
통신 중인 웹 서버(A서버)외에 다른 웹서버(B 서버) 또는 다른 도메인(C 도메인)의 html 페이지와 resource를 공유할 수 없음
웹 서버(A서버)에서 서비스 해주는 웹페이지에서 웹서버(B 서버)의 리소스에 대한  접근이 제한됨
loginProc.jsp---------------------------------------------------
<%@ page   contentType="text/xml; charset=utf-8"     %>
<%
    request.setCharacterEncoding("utf-8"); 
    response.setContentType("text/xml;charset=utf-8");

    String id = request.getParameter("userid"); 
    String passwd = request.getParameter("userpwd");

    String outString = "";
    int result = 0 ;

    if(id.equals("admin")&&passwd.equals("1234")){
        result = 1;  //로그인 성공
    }else if(id.equals("admin")){
        result = 0;  //패스워드 불일치 
    }else{
  	result = 2; //아이디 존재하지 않음
    }

    if(result==1){
       outString="<response><result>"+ result + "</result><id>"+ id 
				+"</id></response>";
   }else if(result==0){
       outString="<response><result>"+ result + "</result><id>"+ id 
		+"</id></response>";
   }else{
       outString="<response><result>"+ result + "</result><id>"+ id 
		+"</id></response>";
   }  
   out.println(outString);
%>

    
   
       

